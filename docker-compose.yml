version: '3.4'

services:
  modsenproject.identityserver:
    container_name: indetity_server
    image: ${DOCKER_REGISTRY-}modsenprojectidentityserver
    environment:
      ASP_NET_IDENTITY_POSTGRES_CONNECTION_STRING: "Host=localhost;Port=5433;Database=aspnetidentity;Username=postgres;Password=root"
      IDENTITY_SERVER_DATABASE_CONNECTION_STRINGL: "Host=localhost;Port=5433;Database=aspnetidentity;Username=postgres;Password=root"
    build:
      context: .
      dockerfile: ModsenProject.IdentityServer/Dockerfile

  postgres.database:
    container_name: pg_database
    image: postgres:latest
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "root"
      POSTGRES_PASSWORD: "root"
      POSTGRES_DB: "test_db"
    ports:
      - "5432:5432"

  pgadmin:
    container_name: pg_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"

  mongo:
    container_name: mongo_db
    image: mongo
    restart: always
    volumes:
        - ./mongodbdata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root

  mongo-express:
    container_name: mongo_admin
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongo:27017/


  rabbitmq:
    image: rabbitmq:management
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672  
    volumes:
        - rabbitmqdata:/var/lib/rabbitmq/
        - rabbitmqlogs:/var/log/rabbitmq
    networks:
        - rabbitmq_network

  modsenproject.producerapi:
    image: ${DOCKER_REGISTRY-}modsenprojectproducerapi
    build:
      context: .
      dockerfile: ModsenProject.ProducerApi/Dockerfile

  modsenproject.consumerapi:
    image: ${DOCKER_REGISTRY-}modsenprojectconsumerapi
    build:
      context: .
      dockerfile: ModsenProject.ConsumerApi/Dockerfile

networks:
  rabbitmq_network:
    driver: bridge

volumes:
  mongodbdata:
    external: true
  pgdata:
    external: true
  rabbitmqdata:
    external: true
  rabbitmqlogs:
    external: true


